#xlrd packages study
#type "pip install xlrd" in the cmd window for windows operation system to install xlrd package.
import xlrd
workbook=xlrd.open_workbook(r"C:\Users\10157624\Desktop\临时表.xlsx", on_demand=True) #打开工作薄
workbook.sheet_names()  # 获取工作薄中所有sheet的名称
workbook.sheet_names() [i] # 获取工作薄中第i个sheet的名称
workbook.nsheets        # 获取sheet的个数,等于len(sheets)
workbook.sheets()[0]    # 获取xls文件第一个工作表
workbook.sheet_by_index(0)          # 通过索引获取xls文件第0个sheet
workbook.sheet_by_name('Sheet1')    # 通过工作表名获取 sheet
#-----------------------------------------------------------------------
#获取sheet的行数或列数
sheet2=workbook.sheet_by_name("ULSINR")	 # 获取名为ULSINR的sheet的行数和列数；
sheet2.nrows  # 获取sheet的行数；
sheet2.ncols	# 获取sheet的列数；
#-----------------------------------------------------------------------
#获取sheet的行数据或列数据
sheet2.row(n)	# 获取sheet的第n行的数据内容（返回cell_type和cell_value）；
sheet2.row_values(n)		# 获取sheet的第n行的数据内容（仅返回cell_value）；
sheet2.col(n)		# 获取sheet的第n列的数据内容（返回cell_type和cell_value）；
sheet2.col_values(n)		# 获取sheet的第n列的数据内容（仅返回cell_value）；
#-----------------------------------------------------------------------
#获取sheet中制定单元格的数据
sheet2.cell(m,n) 	# 获取sheet的(m,n)单元格的数据内容（返回cell_type和cell_value）m,n从0索引起；
sheet2.cell(m,n).value 	# 获取sheet的(m,n)单元格的数据内容（仅返回cell_value）m,n从0索引起；
sheet2.cell_value(m,n) 	# 获取sheet的(m,n)单元格的数据内容（仅返回cell_value）m,n从0索引起;
sheet2.row(m)[n].value	# 获取sheet的第m+1行n+1列的单元格数据内容（仅返回cell_value）m,n从0索引起;
sheet2.col(n)[m].value	# 获取sheet的第n+1列m+1行单元格的数据内容（仅返回cell_value）m,n从0索引起;
#-----------------------------------------------------------------------
#获取sheet的名字
sheet2.name
#-----------------------------------------------------------------------
#获取sheet的行或者列区域切片
sheet2.row_values(0,1,3) # row_values( rowx, start_colx=0, end_colx=None)读取行区域切片
sheet2.col_values(0,1,4) # col_values(colx, start_rowx=0, end_rowx=None)读取列区域切片
# sheet2.row_values(0,4,5)与sheet2.col_values(4,0,1)为同一单元格；
#-----------------------------------------------------------------------
#读取sheet的多行数据
def get_mutirows_from_sheet(sheet,start_rowx=0,end_rowx=0):
	rows_value=[sheet.row_values(rowx) for rowx in range(start_rowx,end_rowx)]
	return rows_value
get_mutirows_from_sheet(sheet2,0,1)
#-----------------------------------------------------------------------
#读取sheet的多列数据
def get_muticols_from_sheet(sheet,start_colx=0,end_colx=0):
	cols_value=[sheet.col_values(colx) for colx in range(start_colx,end_colx)]
	return cols_value
get_muticols_from_sheet(sheet2,3,5)
#-----------------------------------------------------------------------
#获取一个连续区域的值
def get_range(sheet,start_rowx=0,end_rowx=0,start_colx=0,end_colx=0):
	range_values=[sheet.row_values(rowx,start_colx,end_colx) for rowx in range(start_rowx,end_rowx)]
	return range_values
get_range(sheet2,0,3,2,5)
#-----------------------------------------------------------------------
#读取单个sheet的值
def readsheet(filename,sheetindex=0,sheetname=None):
	"""读取Excel文件的一个sheet"""
	workbook=xlrd.open_workbook(filename,on_demand=True)
	if sheetname is not None:
		sheet=workbook.sheet_by_name(sheetname)
	else:
		sheet=workbook.sheet_by_index(sheetindex)
	rowsvalue=[sheet.row_values(rowx) for rowx in range(sheet.nrows)]
	return rowsvalue
readsheet(r"C:\Users\10157624\Desktop\临时表.xlsx",1,"ULSINR")
readsheet(r"C:\Users\10157624\Desktop\临时表.xlsx",1,)
#-----------------------------------------------------------------------
#读取整个Excel文件至字典中
def readworkbook(filename):
	"""读取整个Excel文件
	返回读取的所有sheet名字列表：sheetnames
	字典类型的数据：bookdata={sheetname1:rows1,sheetname2:rows2,sheetname3:rows3, ...}
	"""
	workbook=xlrd.open_workbook(filename,on_demand=True)
	sheetnames=workbook.sheet_names()
	bookdata={}
	for sheetname in sheetnames:
		sheet=workbook.sheet_by_name(sheetname)
		"""读取每个sheet的所有行"""
		rows=[sheet.row_values(row) for row in range(sheet.nrows)]
		bookdata.setdefault(sheetname,rows)	#每个sheet名称和数据作为字典的一个元组
	return sheetnames,bookdata
readworkbook(r"C:\Users\10157624\Desktop\临时表.xlsx")
#-----------------------------------------------------------------------------
#读取excel中某一个sheet中的所有数据到字典
def readsheetbyname(filename,sheetname):
	"""按照给定的sheetname列表读取excel中相应的sheet
	字典类型的数据： bookdata={sheetname1:rows1, sheetname2:rows2,  sheetname3:rows3, ...}
	"""
	workbook=xlrd.open_workbook(filename,on_demand=True)
	booksheetnames=workbook.sheet_names()
	bookdata={}	
	if sheetname in booksheetnames:
		sheet=workbook.sheet_by_name(sheetname)
		rows=[sheet.row_values(row) for row in range(sheet.nrows)]
		bookdata.setdefault(sheetname,rows)
	return bookdata
readsheetbyname(r"C:\Users\10157624\Desktop\临时表.xlsx", "ULSINR")
#--------------------------------------------------------------------------
"""或者直接读取excel中某一个sheet中数据，但不放入字典"""
def readsheetbyname(filename,sheetname):
	"""按照给定的sheetname列表读取excel中相应的sheet
	字典类型的数据： bookdata={sheetname1:rows1, sheetname2:rows2,  sheetname3:rows3, ...}
	"""
	workbook=xlrd.open_workbook(filename,on_demand=True)
	booksheetnames=workbook.sheet_names()
	if sheetname in booksheetnames:
		sheet=workbook.sheet_by_name(sheetname)
		rows=[sheet.row_values(row) for row in range(sheet.nrows)]
	return rows
readsheetbyname(r"C:\Users\10157624\Desktop\临时表.xlsx", "ULSINR")
#--------------------------------------------------------------------------
#读取excel中某几个sheet中的所有数据到字典
def readbookbysheetnames(filename, sheetnamelist):
    """按照给定的sheetname列表读取excel中相应的sheet
    字典类型的数据： bookdata={sheetname1:rows1, sheetname2:rows2,  sheetname3:rows3, ...}
    """
    workbook = xlrd.open_workbook(filename, on_demand=True)
    booksheetnames = workbook.sheet_names()
    bookdata = {}
    for sheetname in sheetnamelist:
        # 给定的sheetname是否在excel表中存在        
        if sheetname in booksheetnames:
            sheet = workbook.sheet_by_name(sheetname)
            rows = [sheet.row_values(row) for row in range(sheet.nrows)]
            bookdata.setdefault(sheetname, rows)
    return bookdata

readbookbysheetnames(r"C:\Users\10157624\Desktop\临时表.xlsx", ["ULSINR","Sheet1"])
